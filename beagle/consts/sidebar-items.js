initSidebarItems({"struct":[["CustomArrayFour","An custom array of size $size which has as few restrictions as possible (e.g. doesn't restrict `Clone` impls to `T: Copy`)."],["CustomArrayOne","An custom array of size $size which has as few restrictions as possible (e.g. doesn't restrict `Clone` impls to `T: Copy`)."],["CustomArrayThree","An custom array of size $size which has as few restrictions as possible (e.g. doesn't restrict `Clone` impls to `T: Copy`)."],["CustomArrayTwo","An custom array of size $size which has as few restrictions as possible (e.g. doesn't restrict `Clone` impls to `T: Copy`)."],["CustomArrayZero","An custom array of size $size which has as few restrictions as possible (e.g. doesn't restrict `Clone` impls to `T: Copy`)."],["Four",""],["One",""],["Three",""],["Two",""],["Zero",""]],"trait":[["Array","Types that represent an array"],["ArrayMut",""],["ArrayRef",""],["Constant","Types that represent a constant"],["DecrementIfLargerThan","Types that can be conditionally decremented if `Rhs` is smaller"],["Dim","Types that represent a dimension."],["DimMut",""],["DimRef",""],["ExtractArray","Types that can have an array position extracted."],["ExtractItem","Types that can have an array position extracted."],["HasLarger","Types that have constants larger than themselves"],["HasSmaller","Types that have constants smaller than themselves"],["IsLargerThan","A trait to indicate that a constant has a higher value than `C`"],["IsSmallerThan","A trait to indicate that a constant has a lower value than `C`"],["NotSame","A trait to indicate that constants are not the same value"],["SelectFour","Types that can be conditionally selected"],["SelectThree","Types that can be conditionally selected"],["SelectTwo","Types that can be conditionally selected"],["TwoDim",""],["TwoDimMut",""],["TwoDimRef",""]]});