var searchIndex = {};
searchIndex["beagle"] = {"doc":"A basic linear algebra library for computer graphics.","items":[[3,"Value","beagle","A simple wrapper to allow generic scalar binary ops",null,null],[12,"0","","",0,null],[5,"v","","An function to produce Value which is short to type",null,{"inputs":[{"name":"s"}],"output":{"name":"value"}}],[0,"angle","","32-bit and 64-bit type-safe angle units",null,null],[3,"Rad32","beagle::angle","A 32-bit floating point angle in radians",null,null],[3,"Rad64","","A 64-bit floating point angle in radians",null,null],[3,"Deg32","","A 32-bit floating point angle in degrees",null,null],[3,"Deg64","","A 64-bit floating point angle in degrees",null,null],[8,"Angle","","Types that can be used with trigonometric functions.",null,null],[16,"Type","","The underlying type of the angle.",1,null],[18,"TURN","","The numerical value representing full turn.",1,null],[10,"from_value","","Construct an angle from a numerical type",1,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[10,"into_value","","Deconstruct an angle into a numerical value",1,null],[10,"sin","","Computes the sine of a number.",1,null],[10,"cos","","Computes the cosine of a number.",1,null],[10,"tan","","Computes the tangent of a number.",1,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,null],[10,"asin","","Computes the arcsine of a number. Return value is in the range [-TURN/4, TURN/4] or NaN if\nthe number is outside the range [-1, 1].",1,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in the range [0, TURN/2] or NaN if the\nnumber is outside the range [-1, 1].",1,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in the range [-TURN/4, TURN/4].",1,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `y` and `x`.",1,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"rad32"}}],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"from","","",2,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"from_value","","",2,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[11,"into_value","","",2,null],[11,"sin","","",2,null],[11,"cos","","",2,null],[11,"tan","","",2,null],[11,"sin_cos","","",2,null],[11,"asin","","",2,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"acos","","",2,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan","","",2,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan2","","",2,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"neg","","",2,null],[11,"add","","",2,null],[11,"div","","",2,null],[11,"div","","",2,null],[11,"mul","","",2,null],[11,"rem","","",2,null],[11,"sub","","",2,null],[11,"add_assign","","",2,null],[11,"mul_assign","","",2,null],[11,"div_assign","","",2,null],[11,"rem_assign","","",2,null],[11,"sub_assign","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"rad64"}}],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"from","","",3,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"from_value","","",3,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[11,"into_value","","",3,null],[11,"sin","","",3,null],[11,"cos","","",3,null],[11,"tan","","",3,null],[11,"sin_cos","","",3,null],[11,"asin","","",3,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"acos","","",3,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan","","",3,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan2","","",3,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"neg","","",3,null],[11,"add","","",3,null],[11,"div","","",3,null],[11,"div","","",3,null],[11,"mul","","",3,null],[11,"rem","","",3,null],[11,"sub","","",3,null],[11,"add_assign","","",3,null],[11,"mul_assign","","",3,null],[11,"div_assign","","",3,null],[11,"rem_assign","","",3,null],[11,"sub_assign","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"deg32"}}],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"from","","",4,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[11,"from_value","","",4,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[11,"into_value","","",4,null],[11,"sin","","",4,null],[11,"cos","","",4,null],[11,"tan","","",4,null],[11,"sin_cos","","",4,null],[11,"asin","","",4,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"acos","","",4,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan","","",4,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan2","","",4,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"div","","",4,null],[11,"div","","",4,null],[11,"mul","","",4,null],[11,"rem","","",4,null],[11,"sub","","",4,null],[11,"add_assign","","",4,null],[11,"mul_assign","","",4,null],[11,"div_assign","","",4,null],[11,"rem_assign","","",4,null],[11,"sub_assign","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"deg64"}}],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"from","","",5,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"from_value","","",5,{"inputs":[{"name":"v"}],"output":{"name":"self"}}],[11,"into_value","","",5,null],[11,"sin","","",5,null],[11,"cos","","",5,null],[11,"tan","","",5,null],[11,"sin_cos","","",5,null],[11,"asin","","",5,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"acos","","",5,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan","","",5,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"atan2","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"self"}}],[11,"neg","","",5,null],[11,"add","","",5,null],[11,"div","","",5,null],[11,"div","","",5,null],[11,"mul","","",5,null],[11,"rem","","",5,null],[11,"sub","","",5,null],[11,"add_assign","","",5,null],[11,"mul_assign","","",5,null],[11,"div_assign","","",5,null],[11,"rem_assign","","",5,null],[11,"sub_assign","","",5,null],[11,"from","","",2,{"inputs":[{"name":"deg32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"rad32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"deg32"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"deg64"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"rad32"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"deg32"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"rad32"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"rad64"}],"output":{"name":"self"}}],[0,"consts","beagle","Traits and structs that emulate integer generics.",null,null],[3,"CustomArrayZero","beagle::consts","An custom array of size $size which has as few restrictions as possible (e.g. doesn&#39;t restrict\n`Clone` impls to `T: Copy`).",null,null],[12,"0","","",6,null],[3,"Zero","","",null,null],[3,"CustomArrayOne","","An custom array of size $size which has as few restrictions as possible (e.g. doesn&#39;t restrict\n`Clone` impls to `T: Copy`).",null,null],[12,"0","","",7,null],[3,"One","","",null,null],[3,"CustomArrayTwo","","An custom array of size $size which has as few restrictions as possible (e.g. doesn&#39;t restrict\n`Clone` impls to `T: Copy`).",null,null],[12,"0","","",8,null],[3,"Two","","",null,null],[3,"CustomArrayThree","","An custom array of size $size which has as few restrictions as possible (e.g. doesn&#39;t restrict\n`Clone` impls to `T: Copy`).",null,null],[12,"0","","",9,null],[3,"Three","","",null,null],[3,"CustomArrayFour","","An custom array of size $size which has as few restrictions as possible (e.g. doesn&#39;t restrict\n`Clone` impls to `T: Copy`).",null,null],[12,"0","","",10,null],[3,"Four","","",null,null],[8,"Constant","","Types that represent a constant",null,null],[18,"VALUE","","The value of a constant",11,null],[8,"NotSame","","A trait to indicate that constants are not the same value",null,null],[8,"IsSmallerThan","","A trait to indicate that a constant has a lower value than `C`",null,null],[10,"index_array","","Index an array of size `C` safely.",12,{"inputs":[{"name":"type"}],"output":{"name":"t"}}],[8,"IsLargerThan","","A trait to indicate that a constant has a higher value than `C`",null,null],[8,"HasSmaller","","Types that have constants smaller than themselves",null,null],[16,"Smaller","","",13,null],[8,"HasLarger","","Types that have constants larger than themselves",null,null],[16,"Larger","","",14,null],[8,"ExtractItem","","Types that can have an array position extracted.",null,null],[10,"extract","","",15,null],[8,"ExtractArray","","Types that can have an array position extracted.",null,null],[16,"Extracted","","The extracted reference array size",16,null],[10,"extract_array_ref","","",16,null],[10,"extract_array_mut","","",16,null],[8,"DecrementIfLargerThan","","Types that can be conditionally decremented if `Rhs` is smaller",null,null],[16,"Result","","",17,null],[8,"SelectTwo","","Types that can be conditionally selected",null,null],[16,"Selected","","",18,null],[8,"SelectThree","","Types that can be conditionally selected",null,null],[16,"Selected","","",19,null],[8,"SelectFour","","Types that can be conditionally selected",null,null],[16,"Selected","","",20,null],[8,"Array","","Types that represent an array",null,null],[16,"RawType","","A raw array of the size equal to the dimension this type represents.",21,null],[16,"Type","","A custom array of the size equal to the dimension this type represents.",21,null],[10,"from_value","","Construct an array from a single value `v`, replicating it to all positions in the array.",21,{"inputs":[{"name":"t"}],"output":{"name":"type"}}],[10,"apply","","Apply `f` to all the elements of the array",21,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[10,"apply2","","Apply `f` to all elements of two arrays.",21,null],[10,"fold","","Fold all the elements of the array with function `f`",21,{"inputs":[{"name":"type"},{"name":"o"},{"name":"f"}],"output":{"name":"o"}}],[10,"fold2","","Fold all the elements of two arrays with function `f`",21,null],[10,"map","","Map all the elements of the array with function `f`",21,null],[10,"map_into_2","","Map all the elements into two arrays with function `f`",21,null],[10,"map2","","Map all the elements of two arrays with function `f`",21,null],[10,"map3","","Map all the elements of three arrays with function `f`",21,null],[10,"transpose","","Transpose the elements of a 2d array",21,null],[10,"transpose_helper","","A helper to transpose the elements of a 2d array (recursion)",21,null],[8,"ArrayRef","","",null,null],[10,"get_ref","","",22,null],[8,"ArrayMut","","",null,null],[10,"get_mut","","",23,null],[8,"Dim","","Types that represent a dimension.",null,null],[10,"split","","Split the array into an element and a smaller array.",24,null],[10,"split_ref","","Split the array into a reference to an element and a reference to a smaller array.",24,null],[10,"split_ref_end","","Split the array into a reference to a smaller array and a reference to an element.",24,null],[10,"split_mut","","Split the array into a mutable reference to an element and a mutable reference to a smaller array.",24,null],[10,"split_mut_end","","Split the array into a mutable reference to a smaller array and a mutable reference to an element.",24,null],[10,"chain","","The opposite of split.",24,null],[8,"DimRef","","",null,null],[8,"DimMut","","",null,null],[8,"TwoDim","","",null,null],[8,"TwoDimRef","","",null,null],[8,"TwoDimMut","","",null,null],[11,"index_array","","Index an array of size `C` safely.",25,null],[11,"index_array","","Index an array of size `C` safely.",25,null],[11,"index_array","","Index an array of size `C` safely.",25,null],[11,"index_array","","Index an array of size `C` safely.",25,null],[11,"index_array","","Index an array of size `C` safely.",26,null],[11,"index_array","","Index an array of size `C` safely.",26,null],[11,"index_array","","Index an array of size `C` safely.",26,null],[11,"index_array","","Index an array of size `C` safely.",27,null],[11,"index_array","","Index an array of size `C` safely.",27,null],[11,"index_array","","Index an array of size `C` safely.",28,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"cmp","","",6,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"from","","",6,null],[11,"into","","",6,null],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"borrow","","",6,null],[11,"borrow_mut","","",6,null],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[11,"as_ref","","",6,null],[11,"as_mut","","",6,null],[11,"borrow","","",6,null],[11,"borrow_mut","","",6,null],[11,"clone","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"default","","",25,{"inputs":[],"output":{"name":"zero"}}],[11,"eq","","",25,null],[11,"partial_cmp","","",25,null],[11,"cmp","","",25,null],[11,"hash","","",25,null],[11,"from_value","","",25,{"inputs":[{"name":"t"}],"output":{"name":"type"}}],[11,"apply","","",25,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[11,"apply2","","",25,null],[11,"fold","","",25,{"inputs":[{"name":"type"},{"name":"o"},{"name":"f"}],"output":{"name":"o"}}],[11,"fold2","","",25,null],[11,"map","","",25,null],[11,"map_into_2","","",25,null],[11,"map2","","",25,null],[11,"map3","","",25,null],[11,"transpose","","",25,null],[11,"transpose_helper","","",25,null],[11,"get_ref","","",25,null],[11,"get_mut","","",25,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[11,"from","","",7,null],[11,"into","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"borrow","","",7,null],[11,"borrow_mut","","",7,null],[11,"deref","","",7,null],[11,"deref_mut","","",7,null],[11,"as_ref","","",7,null],[11,"as_mut","","",7,null],[11,"borrow","","",7,null],[11,"borrow_mut","","",7,null],[11,"clone","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"default","","",26,{"inputs":[],"output":{"name":"one"}}],[11,"eq","","",26,null],[11,"partial_cmp","","",26,null],[11,"cmp","","",26,null],[11,"hash","","",26,null],[11,"from_value","","",26,{"inputs":[{"name":"t"}],"output":{"name":"type"}}],[11,"apply","","",26,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[11,"apply2","","",26,null],[11,"fold","","",26,{"inputs":[{"name":"type"},{"name":"o"},{"name":"f"}],"output":{"name":"o"}}],[11,"fold2","","",26,null],[11,"map","","",26,null],[11,"map_into_2","","",26,null],[11,"map2","","",26,null],[11,"map3","","",26,null],[11,"transpose","","",26,null],[11,"transpose_helper","","",26,null],[11,"get_ref","","",26,null],[11,"get_mut","","",26,null],[11,"split","","",26,null],[11,"split_ref","","",26,null],[11,"split_ref_end","","",26,null],[11,"split_mut","","",26,null],[11,"split_mut_end","","",26,null],[11,"chain","","",26,null],[11,"extract","","",26,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"cmp","","",8,null],[11,"hash","","",8,null],[11,"fmt","","",8,null],[11,"from","","",8,null],[11,"into","","",8,null],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"borrow","","",8,null],[11,"borrow_mut","","",8,null],[11,"deref","","",8,null],[11,"deref_mut","","",8,null],[11,"as_ref","","",8,null],[11,"as_mut","","",8,null],[11,"borrow","","",8,null],[11,"borrow_mut","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"default","","",27,{"inputs":[],"output":{"name":"two"}}],[11,"eq","","",27,null],[11,"partial_cmp","","",27,null],[11,"cmp","","",27,null],[11,"hash","","",27,null],[11,"from_value","","",27,{"inputs":[{"name":"t"}],"output":{"name":"type"}}],[11,"apply","","",27,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[11,"apply2","","",27,null],[11,"fold","","",27,{"inputs":[{"name":"type"},{"name":"o"},{"name":"f"}],"output":{"name":"o"}}],[11,"fold2","","",27,null],[11,"map","","",27,null],[11,"map_into_2","","",27,null],[11,"map2","","",27,null],[11,"map3","","",27,null],[11,"transpose","","",27,null],[11,"transpose_helper","","",27,null],[11,"get_ref","","",27,null],[11,"get_mut","","",27,null],[11,"split","","",27,null],[11,"split_ref","","",27,null],[11,"split_ref_end","","",27,null],[11,"split_mut","","",27,null],[11,"split_mut_end","","",27,null],[11,"chain","","",27,null],[11,"extract","","",27,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"hash","","",9,null],[11,"fmt","","",9,null],[11,"from","","",9,null],[11,"into","","",9,null],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"borrow","","",9,null],[11,"borrow_mut","","",9,null],[11,"deref","","",9,null],[11,"deref_mut","","",9,null],[11,"as_ref","","",9,null],[11,"as_mut","","",9,null],[11,"borrow","","",9,null],[11,"borrow_mut","","",9,null],[11,"clone","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"default","","",28,{"inputs":[],"output":{"name":"three"}}],[11,"eq","","",28,null],[11,"partial_cmp","","",28,null],[11,"cmp","","",28,null],[11,"hash","","",28,null],[11,"from_value","","",28,{"inputs":[{"name":"t"}],"output":{"name":"type"}}],[11,"apply","","",28,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[11,"apply2","","",28,null],[11,"fold","","",28,{"inputs":[{"name":"type"},{"name":"o"},{"name":"f"}],"output":{"name":"o"}}],[11,"fold2","","",28,null],[11,"map","","",28,null],[11,"map_into_2","","",28,null],[11,"map2","","",28,null],[11,"map3","","",28,null],[11,"transpose","","",28,null],[11,"transpose_helper","","",28,null],[11,"get_ref","","",28,null],[11,"get_mut","","",28,null],[11,"split","","",28,null],[11,"split_ref","","",28,null],[11,"split_ref_end","","",28,null],[11,"split_mut","","",28,null],[11,"split_mut_end","","",28,null],[11,"chain","","",28,null],[11,"extract","","",28,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"cmp","","",10,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"from","","",10,null],[11,"into","","",10,null],[11,"as_ref","","",10,null],[11,"as_mut","","",10,null],[11,"borrow","","",10,null],[11,"borrow_mut","","",10,null],[11,"deref","","",10,null],[11,"deref_mut","","",10,null],[11,"as_ref","","",10,null],[11,"as_mut","","",10,null],[11,"borrow","","",10,null],[11,"borrow_mut","","",10,null],[11,"clone","","",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"default","","",29,{"inputs":[],"output":{"name":"four"}}],[11,"eq","","",29,null],[11,"partial_cmp","","",29,null],[11,"cmp","","",29,null],[11,"hash","","",29,null],[11,"from_value","","",29,{"inputs":[{"name":"t"}],"output":{"name":"type"}}],[11,"apply","","",29,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[11,"apply2","","",29,null],[11,"fold","","",29,{"inputs":[{"name":"type"},{"name":"o"},{"name":"f"}],"output":{"name":"o"}}],[11,"fold2","","",29,null],[11,"map","","",29,null],[11,"map_into_2","","",29,null],[11,"map2","","",29,null],[11,"map3","","",29,null],[11,"transpose","","",29,null],[11,"transpose_helper","","",29,null],[11,"get_ref","","",29,null],[11,"get_mut","","",29,null],[11,"split","","",29,null],[11,"split_ref","","",29,null],[11,"split_ref_end","","",29,null],[11,"split_mut","","",29,null],[11,"split_mut_end","","",29,null],[11,"chain","","",29,null],[11,"extract","","",29,null],[11,"extract","","",27,null],[11,"extract","","",28,null],[11,"extract","","",28,null],[11,"extract","","",29,null],[11,"extract","","",29,null],[11,"extract","","",29,null],[11,"extract_array_ref","","",27,null],[11,"extract_array_mut","","",27,null],[11,"extract_array_ref","","",28,null],[11,"extract_array_mut","","",28,null],[11,"extract_array_ref","","",28,null],[11,"extract_array_mut","","",28,null],[11,"extract_array_ref","","",28,null],[11,"extract_array_mut","","",28,null],[11,"extract_array_ref","","",29,null],[11,"extract_array_mut","","",29,null],[11,"extract_array_ref","","",29,null],[11,"extract_array_mut","","",29,null],[11,"extract_array_ref","","",29,null],[11,"extract_array_mut","","",29,null],[11,"extract_array_ref","","",29,null],[11,"extract_array_mut","","",29,null],[11,"extract_array_ref","","",29,null],[11,"extract_array_mut","","",29,null],[11,"extract_array_ref","","",29,null],[11,"extract_array_mut","","",29,null],[0,"index","beagle","Indexing and Swizzling for `Vec`",null,null],[3,"Vec2Ref","beagle::index","This is a temporary structure until something is done with rust-lang/rfcs#997\nDo not rely on this type, just rely on the overloaded operators defined for the cases where",null,null],[3,"Vec3Ref","","This is a temporary structure until something is done with rust-lang/rfcs#997\nDo not rely on this type, just rely on the overloaded operators defined for the cases where",null,null],[3,"Vec4Ref","","This is a temporary structure until something is done with rust-lang/rfcs#997\nDo not rely on this type, just rely on the overloaded operators defined for the cases where",null,null],[0,"swizzle","","",null,null],[3,"Swizzle2","beagle::index::swizzle","A struct for assisting in swizzling",null,null],[3,"Swizzle3","","A struct for assisting in swizzling",null,null],[3,"Swizzle4","","A struct for assisting in swizzling",null,null],[3,"SwizzleExtract","","A struct for assisting in swizzling",null,null],[0,"xyzw","","",null,null],[0,"stpq","","",null,null],[0,"rgba","","",null,null],[6,"I00","","A type alias for assisting in swizzling",null,null],[6,"I02","","A type alias for assisting in swizzling",null,null],[6,"I03","","A type alias for assisting in swizzling",null,null],[6,"I10","","A type alias for assisting in swizzling",null,null],[6,"I11","","A type alias for assisting in swizzling",null,null],[6,"I13","","A type alias for assisting in swizzling",null,null],[6,"I20","","A type alias for assisting in swizzling",null,null],[6,"I21","","A type alias for assisting in swizzling",null,null],[6,"I22","","A type alias for assisting in swizzling",null,null],[6,"I30","","A type alias for assisting in swizzling",null,null],[6,"I31","","A type alias for assisting in swizzling",null,null],[6,"I32","","A type alias for assisting in swizzling",null,null],[6,"I33","","A type alias for assisting in swizzling",null,null],[6,"I000","","A type alias for assisting in swizzling",null,null],[6,"I001","","A type alias for assisting in swizzling",null,null],[6,"I002","","A type alias for assisting in swizzling",null,null],[6,"I003","","A type alias for assisting in swizzling",null,null],[6,"I010","","A type alias for assisting in swizzling",null,null],[6,"I011","","A type alias for assisting in swizzling",null,null],[6,"I013","","A type alias for assisting in swizzling",null,null],[6,"I020","","A type alias for assisting in swizzling",null,null],[6,"I021","","A type alias for assisting in swizzling",null,null],[6,"I022","","A type alias for assisting in swizzling",null,null],[6,"I023","","A type alias for assisting in swizzling",null,null],[6,"I030","","A type alias for assisting in swizzling",null,null],[6,"I031","","A type alias for assisting in swizzling",null,null],[6,"I032","","A type alias for assisting in swizzling",null,null],[6,"I033","","A type alias for assisting in swizzling",null,null],[6,"I100","","A type alias for assisting in swizzling",null,null],[6,"I101","","A type alias for assisting in swizzling",null,null],[6,"I102","","A type alias for assisting in swizzling",null,null],[6,"I103","","A type alias for assisting in swizzling",null,null],[6,"I110","","A type alias for assisting in swizzling",null,null],[6,"I111","","A type alias for assisting in swizzling",null,null],[6,"I112","","A type alias for assisting in swizzling",null,null],[6,"I113","","A type alias for assisting in swizzling",null,null],[6,"I120","","A type alias for assisting in swizzling",null,null],[6,"I121","","A type alias for assisting in swizzling",null,null],[6,"I122","","A type alias for assisting in swizzling",null,null],[6,"I130","","A type alias for assisting in swizzling",null,null],[6,"I131","","A type alias for assisting in swizzling",null,null],[6,"I132","","A type alias for assisting in swizzling",null,null],[6,"I133","","A type alias for assisting in swizzling",null,null],[6,"I200","","A type alias for assisting in swizzling",null,null],[6,"I201","","A type alias for assisting in swizzling",null,null],[6,"I202","","A type alias for assisting in swizzling",null,null],[6,"I203","","A type alias for assisting in swizzling",null,null],[6,"I210","","A type alias for assisting in swizzling",null,null],[6,"I211","","A type alias for assisting in swizzling",null,null],[6,"I212","","A type alias for assisting in swizzling",null,null],[6,"I213","","A type alias for assisting in swizzling",null,null],[6,"I220","","A type alias for assisting in swizzling",null,null],[6,"I221","","A type alias for assisting in swizzling",null,null],[6,"I222","","A type alias for assisting in swizzling",null,null],[6,"I223","","A type alias for assisting in swizzling",null,null],[6,"I230","","A type alias for assisting in swizzling",null,null],[6,"I231","","A type alias for assisting in swizzling",null,null],[6,"I232","","A type alias for assisting in swizzling",null,null],[6,"I233","","A type alias for assisting in swizzling",null,null],[6,"I300","","A type alias for assisting in swizzling",null,null],[6,"I301","","A type alias for assisting in swizzling",null,null],[6,"I302","","A type alias for assisting in swizzling",null,null],[6,"I303","","A type alias for assisting in swizzling",null,null],[6,"I310","","A type alias for assisting in swizzling",null,null],[6,"I311","","A type alias for assisting in swizzling",null,null],[6,"I312","","A type alias for assisting in swizzling",null,null],[6,"I313","","A type alias for assisting in swizzling",null,null],[6,"I320","","A type alias for assisting in swizzling",null,null],[6,"I321","","A type alias for assisting in swizzling",null,null],[6,"I322","","A type alias for assisting in swizzling",null,null],[6,"I323","","A type alias for assisting in swizzling",null,null],[6,"I330","","A type alias for assisting in swizzling",null,null],[6,"I331","","A type alias for assisting in swizzling",null,null],[6,"I332","","A type alias for assisting in swizzling",null,null],[6,"I333","","A type alias for assisting in swizzling",null,null],[6,"I0000","","A type alias for assisting in swizzling",null,null],[6,"I0001","","A type alias for assisting in swizzling",null,null],[6,"I0002","","A type alias for assisting in swizzling",null,null],[6,"I0003","","A type alias for assisting in swizzling",null,null],[6,"I0010","","A type alias for assisting in swizzling",null,null],[6,"I0011","","A type alias for assisting in swizzling",null,null],[6,"I0012","","A type alias for assisting in swizzling",null,null],[6,"I0013","","A type alias for assisting in swizzling",null,null],[6,"I0020","","A type alias for assisting in swizzling",null,null],[6,"I0021","","A type alias for assisting in swizzling",null,null],[6,"I0022","","A type alias for assisting in swizzling",null,null],[6,"I0023","","A type alias for assisting in swizzling",null,null],[6,"I0030","","A type alias for assisting in swizzling",null,null],[6,"I0031","","A type alias for assisting in swizzling",null,null],[6,"I0032","","A type alias for assisting in swizzling",null,null],[6,"I0033","","A type alias for assisting in swizzling",null,null],[6,"I0100","","A type alias for assisting in swizzling",null,null],[6,"I0101","","A type alias for assisting in swizzling",null,null],[6,"I0102","","A type alias for assisting in swizzling",null,null],[6,"I0103","","A type alias for assisting in swizzling",null,null],[6,"I0110","","A type alias for assisting in swizzling",null,null],[6,"I0111","","A type alias for assisting in swizzling",null,null],[6,"I0112","","A type alias for assisting in swizzling",null,null],[6,"I0113","","A type alias for assisting in swizzling",null,null],[6,"I0120","","A type alias for assisting in swizzling",null,null],[6,"I0121","","A type alias for assisting in swizzling",null,null],[6,"I0122","","A type alias for assisting in swizzling",null,null],[6,"I0130","","A type alias for assisting in swizzling",null,null],[6,"I0131","","A type alias for assisting in swizzling",null,null],[6,"I0132","","A type alias for assisting in swizzling",null,null],[6,"I0133","","A type alias for assisting in swizzling",null,null],[6,"I0200","","A type alias for assisting in swizzling",null,null],[6,"I0201","","A type alias for assisting in swizzling",null,null],[6,"I0202","","A type alias for assisting in swizzling",null,null],[6,"I0203","","A type alias for assisting in swizzling",null,null],[6,"I0210","","A type alias for assisting in swizzling",null,null],[6,"I0211","","A type alias for assisting in swizzling",null,null],[6,"I0212","","A type alias for assisting in swizzling",null,null],[6,"I0213","","A type alias for assisting in swizzling",null,null],[6,"I0220","","A type alias for assisting in swizzling",null,null],[6,"I0221","","A type alias for assisting in swizzling",null,null],[6,"I0222","","A type alias for assisting in swizzling",null,null],[6,"I0223","","A type alias for assisting in swizzling",null,null],[6,"I0230","","A type alias for assisting in swizzling",null,null],[6,"I0231","","A type alias for assisting in swizzling",null,null],[6,"I0232","","A type alias for assisting in swizzling",null,null],[6,"I0233","","A type alias for assisting in swizzling",null,null],[6,"I0300","","A type alias for assisting in swizzling",null,null],[6,"I0301","","A type alias for assisting in swizzling",null,null],[6,"I0302","","A type alias for assisting in swizzling",null,null],[6,"I0303","","A type alias for assisting in swizzling",null,null],[6,"I0310","","A type alias for assisting in swizzling",null,null],[6,"I0311","","A type alias for assisting in swizzling",null,null],[6,"I0312","","A type alias for assisting in swizzling",null,null],[6,"I0313","","A type alias for assisting in swizzling",null,null],[6,"I0320","","A type alias for assisting in swizzling",null,null],[6,"I0321","","A type alias for assisting in swizzling",null,null],[6,"I0322","","A type alias for assisting in swizzling",null,null],[6,"I0323","","A type alias for assisting in swizzling",null,null],[6,"I0330","","A type alias for assisting in swizzling",null,null],[6,"I0331","","A type alias for assisting in swizzling",null,null],[6,"I0332","","A type alias for assisting in swizzling",null,null],[6,"I0333","","A type alias for assisting in swizzling",null,null],[6,"I1000","","A type alias for assisting in swizzling",null,null],[6,"I1001","","A type alias for assisting in swizzling",null,null],[6,"I1002","","A type alias for assisting in swizzling",null,null],[6,"I1003","","A type alias for assisting in swizzling",null,null],[6,"I1010","","A type alias for assisting in swizzling",null,null],[6,"I1011","","A type alias for assisting in swizzling",null,null],[6,"I1012","","A type alias for assisting in swizzling",null,null],[6,"I1013","","A type alias for assisting in swizzling",null,null],[6,"I1020","","A type alias for assisting in swizzling",null,null],[6,"I1021","","A type alias for assisting in swizzling",null,null],[6,"I1022","","A type alias for assisting in swizzling",null,null],[6,"I1023","","A type alias for assisting in swizzling",null,null],[6,"I1030","","A type alias for assisting in swizzling",null,null],[6,"I1031","","A type alias for assisting in swizzling",null,null],[6,"I1032","","A type alias for assisting in swizzling",null,null],[6,"I1033","","A type alias for assisting in swizzling",null,null],[6,"I1100","","A type alias for assisting in swizzling",null,null],[6,"I1101","","A type alias for assisting in swizzling",null,null],[6,"I1102","","A type alias for assisting in swizzling",null,null],[6,"I1103","","A type alias for assisting in swizzling",null,null],[6,"I1110","","A type alias for assisting in swizzling",null,null],[6,"I1111","","A type alias for assisting in swizzling",null,null],[6,"I1112","","A type alias for assisting in swizzling",null,null],[6,"I1113","","A type alias for assisting in swizzling",null,null],[6,"I1120","","A type alias for assisting in swizzling",null,null],[6,"I1121","","A type alias for assisting in swizzling",null,null],[6,"I1122","","A type alias for assisting in swizzling",null,null],[6,"I1123","","A type alias for assisting in swizzling",null,null],[6,"I1130","","A type alias for assisting in swizzling",null,null],[6,"I1131","","A type alias for assisting in swizzling",null,null],[6,"I1132","","A type alias for assisting in swizzling",null,null],[6,"I1133","","A type alias for assisting in swizzling",null,null],[6,"I1200","","A type alias for assisting in swizzling",null,null],[6,"I1201","","A type alias for assisting in swizzling",null,null],[6,"I1202","","A type alias for assisting in swizzling",null,null],[6,"I1203","","A type alias for assisting in swizzling",null,null],[6,"I1210","","A type alias for assisting in swizzling",null,null],[6,"I1211","","A type alias for assisting in swizzling",null,null],[6,"I1212","","A type alias for assisting in swizzling",null,null],[6,"I1213","","A type alias for assisting in swizzling",null,null],[6,"I1220","","A type alias for assisting in swizzling",null,null],[6,"I1221","","A type alias for assisting in swizzling",null,null],[6,"I1222","","A type alias for assisting in swizzling",null,null],[6,"I1223","","A type alias for assisting in swizzling",null,null],[6,"I1230","","A type alias for assisting in swizzling",null,null],[6,"I1231","","A type alias for assisting in swizzling",null,null],[6,"I1232","","A type alias for assisting in swizzling",null,null],[6,"I1233","","A type alias for assisting in swizzling",null,null],[6,"I1300","","A type alias for assisting in swizzling",null,null],[6,"I1301","","A type alias for assisting in swizzling",null,null],[6,"I1302","","A type alias for assisting in swizzling",null,null],[6,"I1303","","A type alias for assisting in swizzling",null,null],[6,"I1310","","A type alias for assisting in swizzling",null,null],[6,"I1311","","A type alias for assisting in swizzling",null,null],[6,"I1312","","A type alias for assisting in swizzling",null,null],[6,"I1313","","A type alias for assisting in swizzling",null,null],[6,"I1320","","A type alias for assisting in swizzling",null,null],[6,"I1321","","A type alias for assisting in swizzling",null,null],[6,"I1322","","A type alias for assisting in swizzling",null,null],[6,"I1323","","A type alias for assisting in swizzling",null,null],[6,"I1330","","A type alias for assisting in swizzling",null,null],[6,"I1331","","A type alias for assisting in swizzling",null,null],[6,"I1332","","A type alias for assisting in swizzling",null,null],[6,"I1333","","A type alias for assisting in swizzling",null,null],[6,"I2000","","A type alias for assisting in swizzling",null,null],[6,"I2001","","A type alias for assisting in swizzling",null,null],[6,"I2002","","A type alias for assisting in swizzling",null,null],[6,"I2003","","A type alias for assisting in swizzling",null,null],[6,"I2010","","A type alias for assisting in swizzling",null,null],[6,"I2011","","A type alias for assisting in swizzling",null,null],[6,"I2012","","A type alias for assisting in swizzling",null,null],[6,"I2013","","A type alias for assisting in swizzling",null,null],[6,"I2020","","A type alias for assisting in swizzling",null,null],[6,"I2021","","A type alias for assisting in swizzling",null,null],[6,"I2022","","A type alias for assisting in swizzling",null,null],[6,"I2023","","A type alias for assisting in swizzling",null,null],[6,"I2030","","A type alias for assisting in swizzling",null,null],[6,"I2031","","A type alias for assisting in swizzling",null,null],[6,"I2032","","A type alias for assisting in swizzling",null,null],[6,"I2033","","A type alias for assisting in swizzling",null,null],[6,"I2100","","A type alias for assisting in swizzling",null,null],[6,"I2101","","A type alias for assisting in swizzling",null,null],[6,"I2102","","A type alias for assisting in swizzling",null,null],[6,"I2103","","A type alias for assisting in swizzling",null,null],[6,"I2110","","A type alias for assisting in swizzling",null,null],[6,"I2111","","A type alias for assisting in swizzling",null,null],[6,"I2112","","A type alias for assisting in swizzling",null,null],[6,"I2113","","A type alias for assisting in swizzling",null,null],[6,"I2120","","A type alias for assisting in swizzling",null,null],[6,"I2121","","A type alias for assisting in swizzling",null,null],[6,"I2122","","A type alias for assisting in swizzling",null,null],[6,"I2123","","A type alias for assisting in swizzling",null,null],[6,"I2130","","A type alias for assisting in swizzling",null,null],[6,"I2131","","A type alias for assisting in swizzling",null,null],[6,"I2132","","A type alias for assisting in swizzling",null,null],[6,"I2133","","A type alias for assisting in swizzling",null,null],[6,"I2200","","A type alias for assisting in swizzling",null,null],[6,"I2201","","A type alias for assisting in swizzling",null,null],[6,"I2202","","A type alias for assisting in swizzling",null,null],[6,"I2203","","A type alias for assisting in swizzling",null,null],[6,"I2210","","A type alias for assisting in swizzling",null,null],[6,"I2211","","A type alias for assisting in swizzling",null,null],[6,"I2212","","A type alias for assisting in swizzling",null,null],[6,"I2213","","A type alias for assisting in swizzling",null,null],[6,"I2220","","A type alias for assisting in swizzling",null,null],[6,"I2221","","A type alias for assisting in swizzling",null,null],[6,"I2222","","A type alias for assisting in swizzling",null,null],[6,"I2223","","A type alias for assisting in swizzling",null,null],[6,"I2230","","A type alias for assisting in swizzling",null,null],[6,"I2231","","A type alias for assisting in swizzling",null,null],[6,"I2232","","A type alias for assisting in swizzling",null,null],[6,"I2233","","A type alias for assisting in swizzling",null,null],[6,"I2300","","A type alias for assisting in swizzling",null,null],[6,"I2301","","A type alias for assisting in swizzling",null,null],[6,"I2302","","A type alias for assisting in swizzling",null,null],[6,"I2303","","A type alias for assisting in swizzling",null,null],[6,"I2310","","A type alias for assisting in swizzling",null,null],[6,"I2311","","A type alias for assisting in swizzling",null,null],[6,"I2312","","A type alias for assisting in swizzling",null,null],[6,"I2313","","A type alias for assisting in swizzling",null,null],[6,"I2320","","A type alias for assisting in swizzling",null,null],[6,"I2321","","A type alias for assisting in swizzling",null,null],[6,"I2322","","A type alias for assisting in swizzling",null,null],[6,"I2323","","A type alias for assisting in swizzling",null,null],[6,"I2330","","A type alias for assisting in swizzling",null,null],[6,"I2331","","A type alias for assisting in swizzling",null,null],[6,"I2332","","A type alias for assisting in swizzling",null,null],[6,"I2333","","A type alias for assisting in swizzling",null,null],[6,"I3000","","A type alias for assisting in swizzling",null,null],[6,"I3001","","A type alias for assisting in swizzling",null,null],[6,"I3002","","A type alias for assisting in swizzling",null,null],[6,"I3003","","A type alias for assisting in swizzling",null,null],[6,"I3010","","A type alias for assisting in swizzling",null,null],[6,"I3011","","A type alias for assisting in swizzling",null,null],[6,"I3012","","A type alias for assisting in swizzling",null,null],[6,"I3013","","A type alias for assisting in swizzling",null,null],[6,"I3020","","A type alias for assisting in swizzling",null,null],[6,"I3021","","A type alias for assisting in swizzling",null,null],[6,"I3022","","A type alias for assisting in swizzling",null,null],[6,"I3023","","A type alias for assisting in swizzling",null,null],[6,"I3030","","A type alias for assisting in swizzling",null,null],[6,"I3031","","A type alias for assisting in swizzling",null,null],[6,"I3032","","A type alias for assisting in swizzling",null,null],[6,"I3033","","A type alias for assisting in swizzling",null,null],[6,"I3100","","A type alias for assisting in swizzling",null,null],[6,"I3101","","A type alias for assisting in swizzling",null,null],[6,"I3102","","A type alias for assisting in swizzling",null,null],[6,"I3103","","A type alias for assisting in swizzling",null,null],[6,"I3110","","A type alias for assisting in swizzling",null,null],[6,"I3111","","A type alias for assisting in swizzling",null,null],[6,"I3112","","A type alias for assisting in swizzling",null,null],[6,"I3113","","A type alias for assisting in swizzling",null,null],[6,"I3120","","A type alias for assisting in swizzling",null,null],[6,"I3121","","A type alias for assisting in swizzling",null,null],[6,"I3122","","A type alias for assisting in swizzling",null,null],[6,"I3123","","A type alias for assisting in swizzling",null,null],[6,"I3130","","A type alias for assisting in swizzling",null,null],[6,"I3131","","A type alias for assisting in swizzling",null,null],[6,"I3132","","A type alias for assisting in swizzling",null,null],[6,"I3133","","A type alias for assisting in swizzling",null,null],[6,"I3200","","A type alias for assisting in swizzling",null,null],[6,"I3201","","A type alias for assisting in swizzling",null,null],[6,"I3202","","A type alias for assisting in swizzling",null,null],[6,"I3203","","A type alias for assisting in swizzling",null,null],[6,"I3210","","A type alias for assisting in swizzling",null,null],[6,"I3211","","A type alias for assisting in swizzling",null,null],[6,"I3212","","A type alias for assisting in swizzling",null,null],[6,"I3213","","A type alias for assisting in swizzling",null,null],[6,"I3220","","A type alias for assisting in swizzling",null,null],[6,"I3221","","A type alias for assisting in swizzling",null,null],[6,"I3222","","A type alias for assisting in swizzling",null,null],[6,"I3223","","A type alias for assisting in swizzling",null,null],[6,"I3230","","A type alias for assisting in swizzling",null,null],[6,"I3231","","A type alias for assisting in swizzling",null,null],[6,"I3232","","A type alias for assisting in swizzling",null,null],[6,"I3233","","A type alias for assisting in swizzling",null,null],[6,"I3300","","A type alias for assisting in swizzling",null,null],[6,"I3301","","A type alias for assisting in swizzling",null,null],[6,"I3302","","A type alias for assisting in swizzling",null,null],[6,"I3303","","A type alias for assisting in swizzling",null,null],[6,"I3310","","A type alias for assisting in swizzling",null,null],[6,"I3311","","A type alias for assisting in swizzling",null,null],[6,"I3312","","A type alias for assisting in swizzling",null,null],[6,"I3313","","A type alias for assisting in swizzling",null,null],[6,"I3320","","A type alias for assisting in swizzling",null,null],[6,"I3321","","A type alias for assisting in swizzling",null,null],[6,"I3322","","A type alias for assisting in swizzling",null,null],[6,"I3323","","A type alias for assisting in swizzling",null,null],[6,"I3330","","A type alias for assisting in swizzling",null,null],[6,"I3331","","A type alias for assisting in swizzling",null,null],[6,"I3332","","A type alias for assisting in swizzling",null,null],[6,"I3333","","A type alias for assisting in swizzling",null,null],[6,"I01","","A type alias for assisting in swizzling",null,null],[6,"I12","","A type alias for assisting in swizzling",null,null],[6,"I23","","A type alias for assisting in swizzling",null,null],[6,"I012","","A type alias for assisting in swizzling",null,null],[6,"I123","","A type alias for assisting in swizzling",null,null],[6,"I0123","","A type alias for assisting in swizzling",null,null],[17,"I00","","Constant for swizzling",null,null],[17,"I02","","Constant for swizzling",null,null],[17,"I03","","Constant for swizzling",null,null],[17,"I10","","Constant for swizzling",null,null],[17,"I11","","Constant for swizzling",null,null],[17,"I13","","Constant for swizzling",null,null],[17,"I20","","Constant for swizzling",null,null],[17,"I21","","Constant for swizzling",null,null],[17,"I22","","Constant for swizzling",null,null],[17,"I30","","Constant for swizzling",null,null],[17,"I31","","Constant for swizzling",null,null],[17,"I32","","Constant for swizzling",null,null],[17,"I33","","Constant for swizzling",null,null],[17,"I000","","Constant for swizzling",null,null],[17,"I001","","Constant for swizzling",null,null],[17,"I002","","Constant for swizzling",null,null],[17,"I003","","Constant for swizzling",null,null],[17,"I010","","Constant for swizzling",null,null],[17,"I011","","Constant for swizzling",null,null],[17,"I013","","Constant for swizzling",null,null],[17,"I020","","Constant for swizzling",null,null],[17,"I021","","Constant for swizzling",null,null],[17,"I022","","Constant for swizzling",null,null],[17,"I023","","Constant for swizzling",null,null],[17,"I030","","Constant for swizzling",null,null],[17,"I031","","Constant for swizzling",null,null],[17,"I032","","Constant for swizzling",null,null],[17,"I033","","Constant for swizzling",null,null],[17,"I100","","Constant for swizzling",null,null],[17,"I101","","Constant for swizzling",null,null],[17,"I102","","Constant for swizzling",null,null],[17,"I103","","Constant for swizzling",null,null],[17,"I110","","Constant for swizzling",null,null],[17,"I111","","Constant for swizzling",null,null],[17,"I112","","Constant for swizzling",null,null],[17,"I113","","Constant for swizzling",null,null],[17,"I120","","Constant for swizzling",null,null],[17,"I121","","Constant for swizzling",null,null],[17,"I122","","Constant for swizzling",null,null],[17,"I130","","Constant for swizzling",null,null],[17,"I131","","Constant for swizzling",null,null],[17,"I132","","Constant for swizzling",null,null],[17,"I133","","Constant for swizzling",null,null],[17,"I200","","Constant for swizzling",null,null],[17,"I201","","Constant for swizzling",null,null],[17,"I202","","Constant for swizzling",null,null],[17,"I203","","Constant for swizzling",null,null],[17,"I210","","Constant for swizzling",null,null],[17,"I211","","Constant for swizzling",null,null],[17,"I212","","Constant for swizzling",null,null],[17,"I213","","Constant for swizzling",null,null],[17,"I220","","Constant for swizzling",null,null],[17,"I221","","Constant for swizzling",null,null],[17,"I222","","Constant for swizzling",null,null],[17,"I223","","Constant for swizzling",null,null],[17,"I230","","Constant for swizzling",null,null],[17,"I231","","Constant for swizzling",null,null],[17,"I232","","Constant for swizzling",null,null],[17,"I233","","Constant for swizzling",null,null],[17,"I300","","Constant for swizzling",null,null],[17,"I301","","Constant for swizzling",null,null],[17,"I302","","Constant for swizzling",null,null],[17,"I303","","Constant for swizzling",null,null],[17,"I310","","Constant for swizzling",null,null],[17,"I311","","Constant for swizzling",null,null],[17,"I312","","Constant for swizzling",null,null],[17,"I313","","Constant for swizzling",null,null],[17,"I320","","Constant for swizzling",null,null],[17,"I321","","Constant for swizzling",null,null],[17,"I322","","Constant for swizzling",null,null],[17,"I323","","Constant for swizzling",null,null],[17,"I330","","Constant for swizzling",null,null],[17,"I331","","Constant for swizzling",null,null],[17,"I332","","Constant for swizzling",null,null],[17,"I333","","Constant for swizzling",null,null],[17,"I0000","","Constant for swizzling",null,null],[17,"I0001","","Constant for swizzling",null,null],[17,"I0002","","Constant for swizzling",null,null],[17,"I0003","","Constant for swizzling",null,null],[17,"I0010","","Constant for swizzling",null,null],[17,"I0011","","Constant for swizzling",null,null],[17,"I0012","","Constant for swizzling",null,null],[17,"I0013","","Constant for swizzling",null,null],[17,"I0020","","Constant for swizzling",null,null],[17,"I0021","","Constant for swizzling",null,null],[17,"I0022","","Constant for swizzling",null,null],[17,"I0023","","Constant for swizzling",null,null],[17,"I0030","","Constant for swizzling",null,null],[17,"I0031","","Constant for swizzling",null,null],[17,"I0032","","Constant for swizzling",null,null],[17,"I0033","","Constant for swizzling",null,null],[17,"I0100","","Constant for swizzling",null,null],[17,"I0101","","Constant for swizzling",null,null],[17,"I0102","","Constant for swizzling",null,null],[17,"I0103","","Constant for swizzling",null,null],[17,"I0110","","Constant for swizzling",null,null],[17,"I0111","","Constant for swizzling",null,null],[17,"I0112","","Constant for swizzling",null,null],[17,"I0113","","Constant for swizzling",null,null],[17,"I0120","","Constant for swizzling",null,null],[17,"I0121","","Constant for swizzling",null,null],[17,"I0122","","Constant for swizzling",null,null],[17,"I0130","","Constant for swizzling",null,null],[17,"I0131","","Constant for swizzling",null,null],[17,"I0132","","Constant for swizzling",null,null],[17,"I0133","","Constant for swizzling",null,null],[17,"I0200","","Constant for swizzling",null,null],[17,"I0201","","Constant for swizzling",null,null],[17,"I0202","","Constant for swizzling",null,null],[17,"I0203","","Constant for swizzling",null,null],[17,"I0210","","Constant for swizzling",null,null],[17,"I0211","","Constant for swizzling",null,null],[17,"I0212","","Constant for swizzling",null,null],[17,"I0213","","Constant for swizzling",null,null],[17,"I0220","","Constant for swizzling",null,null],[17,"I0221","","Constant for swizzling",null,null],[17,"I0222","","Constant for swizzling",null,null],[17,"I0223","","Constant for swizzling",null,null],[17,"I0230","","Constant for swizzling",null,null],[17,"I0231","","Constant for swizzling",null,null],[17,"I0232","","Constant for swizzling",null,null],[17,"I0233","","Constant for swizzling",null,null],[17,"I0300","","Constant for swizzling",null,null],[17,"I0301","","Constant for swizzling",null,null],[17,"I0302","","Constant for swizzling",null,null],[17,"I0303","","Constant for swizzling",null,null],[17,"I0310","","Constant for swizzling",null,null],[17,"I0311","","Constant for swizzling",null,null],[17,"I0312","","Constant for swizzling",null,null],[17,"I0313","","Constant for swizzling",null,null],[17,"I0320","","Constant for swizzling",null,null],[17,"I0321","","Constant for swizzling",null,null],[17,"I0322","","Constant for swizzling",null,null],[17,"I0323","","Constant for swizzling",null,null],[17,"I0330","","Constant for swizzling",null,null],[17,"I0331","","Constant for swizzling",null,null],[17,"I0332","","Constant for swizzling",null,null],[17,"I0333","","Constant for swizzling",null,null],[17,"I1000","","Constant for swizzling",null,null],[17,"I1001","","Constant for swizzling",null,null],[17,"I1002","","Constant for swizzling",null,null],[17,"I1003","","Constant for swizzling",null,null],[17,"I1010","","Constant for swizzling",null,null],[17,"I1011","","Constant for swizzling",null,null],[17,"I1012","","Constant for swizzling",null,null],[17,"I1013","","Constant for swizzling",null,null],[17,"I1020","","Constant for swizzling",null,null],[17,"I1021","","Constant for swizzling",null,null],[17,"I1022","","Constant for swizzling",null,null],[17,"I1023","","Constant for swizzling",null,null],[17,"I1030","","Constant for swizzling",null,null],[17,"I1031","","Constant for swizzling",null,null],[17,"I1032","","Constant for swizzling",null,null],[17,"I1033","","Constant for swizzling",null,null],[17,"I1100","","Constant for swizzling",null,null],[17,"I1101","","Constant for swizzling",null,null],[17,"I1102","","Constant for swizzling",null,null],[17,"I1103","","Constant for swizzling",null,null],[17,"I1110","","Constant for swizzling",null,null],[17,"I1111","","Constant for swizzling",null,null],[17,"I1112","","Constant for swizzling",null,null],[17,"I1113","","Constant for swizzling",null,null],[17,"I1120","","Constant for swizzling",null,null],[17,"I1121","","Constant for swizzling",null,null],[17,"I1122","","Constant for swizzling",null,null],[17,"I1123","","Constant for swizzling",null,null],[17,"I1130","","Constant for swizzling",null,null],[17,"I1131","","Constant for swizzling",null,null],[17,"I1132","","Constant for swizzling",null,null],[17,"I1133","","Constant for swizzling",null,null],[17,"I1200","","Constant for swizzling",null,null],[17,"I1201","","Constant for swizzling",null,null],[17,"I1202","","Constant for swizzling",null,null],[17,"I1203","","Constant for swizzling",null,null],[17,"I1210","","Constant for swizzling",null,null],[17,"I1211","","Constant for swizzling",null,null],[17,"I1212","","Constant for swizzling",null,null],[17,"I1213","","Constant for swizzling",null,null],[17,"I1220","","Constant for swizzling",null,null],[17,"I1221","","Constant for swizzling",null,null],[17,"I1222","","Constant for swizzling",null,null],[17,"I1223","","Constant for swizzling",null,null],[17,"I1230","","Constant for swizzling",null,null],[17,"I1231","","Constant for swizzling",null,null],[17,"I1232","","Constant for swizzling",null,null],[17,"I1233","","Constant for swizzling",null,null],[17,"I1300","","Constant for swizzling",null,null],[17,"I1301","","Constant for swizzling",null,null],[17,"I1302","","Constant for swizzling",null,null],[17,"I1303","","Constant for swizzling",null,null],[17,"I1310","","Constant for swizzling",null,null],[17,"I1311","","Constant for swizzling",null,null],[17,"I1312","","Constant for swizzling",null,null],[17,"I1313","","Constant for swizzling",null,null],[17,"I1320","","Constant for swizzling",null,null],[17,"I1321","","Constant for swizzling",null,null],[17,"I1322","","Constant for swizzling",null,null],[17,"I1323","","Constant for swizzling",null,null],[17,"I1330","","Constant for swizzling",null,null],[17,"I1331","","Constant for swizzling",null,null],[17,"I1332","","Constant for swizzling",null,null],[17,"I1333","","Constant for swizzling",null,null],[17,"I2000","","Constant for swizzling",null,null],[17,"I2001","","Constant for swizzling",null,null],[17,"I2002","","Constant for swizzling",null,null],[17,"I2003","","Constant for swizzling",null,null],[17,"I2010","","Constant for swizzling",null,null],[17,"I2011","","Constant for swizzling",null,null],[17,"I2012","","Constant for swizzling",null,null],[17,"I2013","","Constant for swizzling",null,null],[17,"I2020","","Constant for swizzling",null,null],[17,"I2021","","Constant for swizzling",null,null],[17,"I2022","","Constant for swizzling",null,null],[17,"I2023","","Constant for swizzling",null,null],[17,"I2030","","Constant for swizzling",null,null],[17,"I2031","","Constant for swizzling",null,null],[17,"I2032","","Constant for swizzling",null,null],[17,"I2033","","Constant for swizzling",null,null],[17,"I2100","","Constant for swizzling",null,null],[17,"I2101","","Constant for swizzling",null,null],[17,"I2102","","Constant for swizzling",null,null],[17,"I2103","","Constant for swizzling",null,null],[17,"I2110","","Constant for swizzling",null,null],[17,"I2111","","Constant for swizzling",null,null],[17,"I2112","","Constant for swizzling",null,null],[17,"I2113","","Constant for swizzling",null,null],[17,"I2120","","Constant for swizzling",null,null],[17,"I2121","","Constant for swizzling",null,null],[17,"I2122","","Constant for swizzling",null,null],[17,"I2123","","Constant for swizzling",null,null],[17,"I2130","","Constant for swizzling",null,null],[17,"I2131","","Constant for swizzling",null,null],[17,"I2132","","Constant for swizzling",null,null],[17,"I2133","","Constant for swizzling",null,null],[17,"I2200","","Constant for swizzling",null,null],[17,"I2201","","Constant for swizzling",null,null],[17,"I2202","","Constant for swizzling",null,null],[17,"I2203","","Constant for swizzling",null,null],[17,"I2210","","Constant for swizzling",null,null],[17,"I2211","","Constant for swizzling",null,null],[17,"I2212","","Constant for swizzling",null,null],[17,"I2213","","Constant for swizzling",null,null],[17,"I2220","","Constant for swizzling",null,null],[17,"I2221","","Constant for swizzling",null,null],[17,"I2222","","Constant for swizzling",null,null],[17,"I2223","","Constant for swizzling",null,null],[17,"I2230","","Constant for swizzling",null,null],[17,"I2231","","Constant for swizzling",null,null],[17,"I2232","","Constant for swizzling",null,null],[17,"I2233","","Constant for swizzling",null,null],[17,"I2300","","Constant for swizzling",null,null],[17,"I2301","","Constant for swizzling",null,null],[17,"I2302","","Constant for swizzling",null,null],[17,"I2303","","Constant for swizzling",null,null],[17,"I2310","","Constant for swizzling",null,null],[17,"I2311","","Constant for swizzling",null,null],[17,"I2312","","Constant for swizzling",null,null],[17,"I2313","","Constant for swizzling",null,null],[17,"I2320","","Constant for swizzling",null,null],[17,"I2321","","Constant for swizzling",null,null],[17,"I2322","","Constant for swizzling",null,null],[17,"I2323","","Constant for swizzling",null,null],[17,"I2330","","Constant for swizzling",null,null],[17,"I2331","","Constant for swizzling",null,null],[17,"I2332","","Constant for swizzling",null,null],[17,"I2333","","Constant for swizzling",null,null],[17,"I3000","","Constant for swizzling",null,null],[17,"I3001","","Constant for swizzling",null,null],[17,"I3002","","Constant for swizzling",null,null],[17,"I3003","","Constant for swizzling",null,null],[17,"I3010","","Constant for swizzling",null,null],[17,"I3011","","Constant for swizzling",null,null],[17,"I3012","","Constant for swizzling",null,null],[17,"I3013","","Constant for swizzling",null,null],[17,"I3020","","Constant for swizzling",null,null],[17,"I3021","","Constant for swizzling",null,null],[17,"I3022","","Constant for swizzling",null,null],[17,"I3023","","Constant for swizzling",null,null],[17,"I3030","","Constant for swizzling",null,null],[17,"I3031","","Constant for swizzling",null,null],[17,"I3032","","Constant for swizzling",null,null],[17,"I3033","","Constant for swizzling",null,null],[17,"I3100","","Constant for swizzling",null,null],[17,"I3101","","Constant for swizzling",null,null],[17,"I3102","","Constant for swizzling",null,null],[17,"I3103","","Constant for swizzling",null,null],[17,"I3110","","Constant for swizzling",null,null],[17,"I3111","","Constant for swizzling",null,null],[17,"I3112","","Constant for swizzling",null,null],[17,"I3113","","Constant for swizzling",null,null],[17,"I3120","","Constant for swizzling",null,null],[17,"I3121","","Constant for swizzling",null,null],[17,"I3122","","Constant for swizzling",null,null],[17,"I3123","","Constant for swizzling",null,null],[17,"I3130","","Constant for swizzling",null,null],[17,"I3131","","Constant for swizzling",null,null],[17,"I3132","","Constant for swizzling",null,null],[17,"I3133","","Constant for swizzling",null,null],[17,"I3200","","Constant for swizzling",null,null],[17,"I3201","","Constant for swizzling",null,null],[17,"I3202","","Constant for swizzling",null,null],[17,"I3203","","Constant for swizzling",null,null],[17,"I3210","","Constant for swizzling",null,null],[17,"I3211","","Constant for swizzling",null,null],[17,"I3212","","Constant for swizzling",null,null],[17,"I3213","","Constant for swizzling",null,null],[17,"I3220","","Constant for swizzling",null,null],[17,"I3221","","Constant for swizzling",null,null],[17,"I3222","","Constant for swizzling",null,null],[17,"I3223","","Constant for swizzling",null,null],[17,"I3230","","Constant for swizzling",null,null],[17,"I3231","","Constant for swizzling",null,null],[17,"I3232","","Constant for swizzling",null,null],[17,"I3233","","Constant for swizzling",null,null],[17,"I3300","","Constant for swizzling",null,null],[17,"I3301","","Constant for swizzling",null,null],[17,"I3302","","Constant for swizzling",null,null],[17,"I3303","","Constant for swizzling",null,null],[17,"I3310","","Constant for swizzling",null,null],[17,"I3311","","Constant for swizzling",null,null],[17,"I3312","","Constant for swizzling",null,null],[17,"I3313","","Constant for swizzling",null,null],[17,"I3320","","Constant for swizzling",null,null],[17,"I3321","","Constant for swizzling",null,null],[17,"I3322","","Constant for swizzling",null,null],[17,"I3323","","Constant for swizzling",null,null],[17,"I3330","","Constant for swizzling",null,null],[17,"I3331","","Constant for swizzling",null,null],[17,"I3332","","Constant for swizzling",null,null],[17,"I3333","","Constant for swizzling",null,null],[17,"I01","","Constant for swizzling",null,null],[17,"I12","","Constant for swizzling",null,null],[17,"I23","","Constant for swizzling",null,null],[17,"I012","","Constant for swizzling",null,null],[17,"I123","","Constant for swizzling",null,null],[17,"I0123","","Constant for swizzling",null,null],[8,"SwizzleIndex","","A trait for unifying the swizzle helper structs",null,null],[16,"IndexType","","The input type for the swizzle operation",30,null],[18,"INDEX","","The input value for the swizzle operation",30,null],[11,"index","beagle::index","",31,null],[11,"index_mut","","",31,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"index","","",31,null],[11,"index_mut","","",31,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index","","",32,null],[11,"index_mut","","",32,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[11,"index","","",33,null],[11,"index_mut","","",33,null],[17,"I0","","Constant for unary indexing",null,null],[17,"I1","","Constant for unary indexing",null,null],[17,"I2","","Constant for unary indexing",null,null],[17,"I3","","Constant for unary indexing",null,null],[17,"X","","Constant for unary indexing",null,null],[17,"Y","","Constant for unary indexing",null,null],[17,"Z","","Constant for unary indexing",null,null],[17,"W","","Constant for unary indexing",null,null],[17,"R","","Constant for unary indexing",null,null],[17,"G","","Constant for unary indexing",null,null],[17,"B","","Constant for unary indexing",null,null],[17,"A","","Constant for unary indexing",null,null],[17,"S","","Constant for unary indexing",null,null],[17,"T","","Constant for unary indexing",null,null],[17,"P","","Constant for unary indexing",null,null],[17,"Q","","Constant for unary indexing",null,null],[11,"vec","","",31,null],[11,"bitand","beagle","",0,null],[11,"bitor","","",0,null],[11,"bitxor","","",0,null],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"add","","",0,null],[11,"div","","",0,null],[11,"mul","","",0,null],[11,"rem","","",0,null],[11,"sub","","",0,null],[11,"bitand_assign","beagle::index","",31,null],[11,"bitand_assign","","",31,null],[11,"bitor_assign","","",31,null],[11,"bitor_assign","","",31,null],[11,"bitxor_assign","","",31,null],[11,"bitxor_assign","","",31,null],[11,"shl_assign","","",31,null],[11,"shl_assign","","",31,null],[11,"shr_assign","","",31,null],[11,"shr_assign","","",31,null],[11,"add_assign","","",31,null],[11,"add_assign","","",31,null],[11,"div_assign","","",31,null],[11,"div_assign","","",31,null],[11,"mul_assign","","",31,null],[11,"mul_assign","","",31,null],[11,"rem_assign","","",31,null],[11,"rem_assign","","",31,null],[11,"sub_assign","","",31,null],[11,"sub_assign","","",31,null],[11,"vec","","",32,null],[11,"bitand","beagle","",0,null],[11,"bitor","","",0,null],[11,"bitxor","","",0,null],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"add","","",0,null],[11,"div","","",0,null],[11,"mul","","",0,null],[11,"rem","","",0,null],[11,"sub","","",0,null],[11,"bitand_assign","beagle::index","",32,null],[11,"bitand_assign","","",32,null],[11,"bitor_assign","","",32,null],[11,"bitor_assign","","",32,null],[11,"bitxor_assign","","",32,null],[11,"bitxor_assign","","",32,null],[11,"shl_assign","","",32,null],[11,"shl_assign","","",32,null],[11,"shr_assign","","",32,null],[11,"shr_assign","","",32,null],[11,"add_assign","","",32,null],[11,"add_assign","","",32,null],[11,"div_assign","","",32,null],[11,"div_assign","","",32,null],[11,"mul_assign","","",32,null],[11,"mul_assign","","",32,null],[11,"rem_assign","","",32,null],[11,"rem_assign","","",32,null],[11,"sub_assign","","",32,null],[11,"sub_assign","","",32,null],[11,"vec","","",33,null],[11,"bitand","beagle","",0,null],[11,"bitor","","",0,null],[11,"bitxor","","",0,null],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"add","","",0,null],[11,"div","","",0,null],[11,"mul","","",0,null],[11,"rem","","",0,null],[11,"sub","","",0,null],[11,"bitand_assign","beagle::index","",33,null],[11,"bitand_assign","","",33,null],[11,"bitor_assign","","",33,null],[11,"bitor_assign","","",33,null],[11,"bitxor_assign","","",33,null],[11,"bitxor_assign","","",33,null],[11,"shl_assign","","",33,null],[11,"shl_assign","","",33,null],[11,"shr_assign","","",33,null],[11,"shr_assign","","",33,null],[11,"add_assign","","",33,null],[11,"add_assign","","",33,null],[11,"div_assign","","",33,null],[11,"div_assign","","",33,null],[11,"mul_assign","","",33,null],[11,"mul_assign","","",33,null],[11,"rem_assign","","",33,null],[11,"rem_assign","","",33,null],[11,"sub_assign","","",33,null],[11,"sub_assign","","",33,null],[0,"mat","beagle","An row-major array of vectors, written `Mat&lt;R, C, T&gt;` but pronounced &#39;matrix&#39;.",null,null],[3,"Mat","beagle::mat","An row-major array of vectors, written `Mat&lt;R, C, T&gt;` but pronounced &#39;matrix&#39;.",null,null],[6,"Mat1","","An alias for Mat&amp;lt;One, One, T&amp;gt;",null,null],[6,"Mat1x1","","An alias for Mat&amp;lt;One, One, T&amp;gt;",null,null],[6,"Mat1x2","","An alias for Mat&amp;lt;One, Two, T&amp;gt;",null,null],[6,"Mat1x3","","An alias for Mat&amp;lt;One, Three, T&amp;gt;",null,null],[6,"Mat1x4","","An alias for Mat&amp;lt;One, Four, T&amp;gt;",null,null],[6,"Mat2","","An alias for Mat&amp;lt;Two, Two, T&amp;gt;",null,null],[6,"Mat2x1","","An alias for Mat&amp;lt;Two, One, T&amp;gt;",null,null],[6,"Mat2x2","","An alias for Mat&amp;lt;Two, Two, T&amp;gt;",null,null],[6,"Mat2x3","","An alias for Mat&amp;lt;Two, Three, T&amp;gt;",null,null],[6,"Mat2x4","","An alias for Mat&amp;lt;Two, Four, T&amp;gt;",null,null],[6,"Mat3","","An alias for Mat&amp;lt;Three, Three, T&amp;gt;",null,null],[6,"Mat3x1","","An alias for Mat&amp;lt;Three, One, T&amp;gt;",null,null],[6,"Mat3x2","","An alias for Mat&amp;lt;Three, Two, T&amp;gt;",null,null],[6,"Mat3x3","","An alias for Mat&amp;lt;Three, Three, T&amp;gt;",null,null],[6,"Mat3x4","","An alias for Mat&amp;lt;Three, Four, T&amp;gt;",null,null],[6,"Mat4","","An alias for Mat&amp;lt;Four, Four, T&amp;gt;",null,null],[6,"Mat4x1","","An alias for Mat&amp;lt;Four, One, T&amp;gt;",null,null],[6,"Mat4x2","","An alias for Mat&amp;lt;Four, Two, T&amp;gt;",null,null],[6,"Mat4x3","","An alias for Mat&amp;lt;Four, Three, T&amp;gt;",null,null],[6,"Mat4x4","","An alias for Mat&amp;lt;Four, Four, T&amp;gt;",null,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"mat"}}],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"new","","Construct a matrix from an array of arrays",34,null],[11,"from_value","","Construct a matrix from a single value",34,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"deref","","",34,null],[11,"deref_mut","","",34,null],[11,"get_val","","",34,null],[11,"get_ref","","",34,null],[11,"get_mut","","",34,null],[11,"from_val","","",34,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"outer_product","","Constructs a matrix via the outer product of `lhs` and `rhs`.",34,{"inputs":[{"name":"lhs"},{"name":"rhs"}],"output":{"name":"self"}}],[11,"neg","","",34,null],[11,"not","","",34,null],[11,"bitand","","",34,null],[11,"bitand","","",34,null],[11,"bitand","beagle","",0,null],[11,"bitor","beagle::mat","",34,null],[11,"bitor","","",34,null],[11,"bitor","beagle","",0,null],[11,"bitxor","beagle::mat","",34,null],[11,"bitxor","","",34,null],[11,"bitxor","beagle","",0,null],[11,"shl","beagle::mat","",34,null],[11,"shl","","",34,null],[11,"shl","beagle","",0,null],[11,"shr","beagle::mat","",34,null],[11,"shr","","",34,null],[11,"shr","beagle","",0,null],[11,"add","beagle::mat","",34,null],[11,"add","","",34,null],[11,"add","beagle","",0,null],[11,"div","beagle::mat","",34,null],[11,"div","","",34,null],[11,"div","beagle","",0,null],[11,"rem","beagle::mat","",34,null],[11,"rem","","",34,null],[11,"rem","beagle","",0,null],[11,"sub","beagle::mat","",34,null],[11,"sub","","",34,null],[11,"sub","beagle","",0,null],[11,"mul","beagle::mat","",34,null],[11,"mul","beagle","",0,null],[11,"bitand_assign","beagle::mat","",34,null],[11,"bitand_assign","","",34,null],[11,"bitor_assign","","",34,null],[11,"bitor_assign","","",34,null],[11,"bitxor_assign","","",34,null],[11,"bitxor_assign","","",34,null],[11,"shl_assign","","",34,null],[11,"shl_assign","","",34,null],[11,"shr_assign","","",34,null],[11,"shr_assign","","",34,null],[11,"add_assign","","",34,null],[11,"add_assign","","",34,null],[11,"div_assign","","",34,null],[11,"div_assign","","",34,null],[11,"rem_assign","","",34,null],[11,"rem_assign","","",34,null],[11,"sub_assign","","",34,null],[11,"sub_assign","","",34,null],[11,"mul_assign","","",34,null],[11,"mul","","",34,null],[11,"mul","","",34,null],[11,"determinant","","The determinant of the matrix",35,null],[11,"determinant","","The determinant of the matrix",36,null],[11,"determinant","","The determinant of the matrix",37,null],[0,"scalar_array","beagle","Traits and functions that operate on `ScalarArrays`.",null,null],[5,"from_scalar","beagle::scalar_array","Construct a `ScalarArray` from a single value",null,{"inputs":[{"name":"scalar"}],"output":{"name":"s"}}],[5,"apply","","Apply a function to all elements of a `ScalarArray`",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":null}],[5,"apply_ref","","Apply a function to all elements of a `ScalarArray`",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":null}],[5,"apply_mut","","Apply a function to all elements of a `ScalarArray`",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":null}],[5,"apply2","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_val_ref","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_val_mut","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_ref_val","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_ref","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_ref_mut","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_mut_val","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_mut_ref","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"apply2_mut","","Apply a function to all elements of two `ScalarArray`s",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":null}],[5,"fold","","Fold all the scalars in a `ScalarArray`. The first element is mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"s"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"fold_ref","","Fold all the scalars in a `ScalarArray` by reference. The first element is mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"s"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"fold_mut","","Fold all the scalars in a `ScalarArray` by mutable reference. The first element is mapped with\n`f0`, then folding continues with `f` for other elements.",null,{"inputs":[{"name":"s"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"fold2","","Fold all the scalars in two `ScalarArray`s. The first elements are mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"fold2_ref","","Fold all the scalars in two `ScalarArray`s. The first elements are mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"map","","Construct a `ScalarArray` from another `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"t"}}],[5,"map_ref","","Construct a `ScalarArray` from another `ScalarArray` by reference and a mapping function",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"t"}}],[5,"map_mut","","Construct a `ScalarArray` from another `ScalarArray` by reference and a mapping function",null,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"t"}}],[5,"map_into_2","","Construct two `ScalarArray`s from a `ScalarArray` and a mapping function",null,null],[5,"map2","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_val_ref","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_val_mut","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_ref_val","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_ref","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_ref_mut","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_mut_val","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_mut_ref","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map2_mut","","Construct a `ScalarArray` from two other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"f"}],"output":{"name":"u"}}],[5,"map3","","Construct a `ScalarArray` from three other `ScalarArray` and a mapping function",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"u"},{"name":"f"}],"output":{"name":"v"}}],[5,"cpt_eq","","Construct a `ScalarArray` based on the equality of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_ne","","Construct a `ScalarArray` based on the inequality of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_partial_cmp","","Construct a `ScalarArray` based on the partial ordering of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_lt","","Construct a `ScalarArray` based on the `&lt;` comparison of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_le","","Construct a `ScalarArray` based on the `&lt;=` comparison of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_gt","","Construct a `ScalarArray` based on the `&gt;` comparison of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_ge","","Construct a `ScalarArray` based on the `&gt;=` comparison of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_cmp","","Construct a `ScalarArray` based on the ordering of the components of two `ScalarArray`.",null,{"inputs":[{"name":"s"},{"name":"s"}],"output":{"name":"concrete"}}],[5,"cpt_mul","","Multiply two `ScalarArray`s component-wise.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"cpt_mul_assign","","Multiply two `ScalarArray`s component-wise.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":null}],[5,"sum","","Sums all the components of a `ScalarArray`",null,{"inputs":[{"name":"s"}],"output":{"name":"o"}}],[5,"transpose","","Transposes a `ScalarArray`",null,{"inputs":[{"name":"s"}],"output":{"name":"concrete"}}],[5,"mul_vector","","",null,{"inputs":[{"name":"m"},{"name":"v"}],"output":{"name":"concrete"}}],[5,"mul_vector_transpose","","",null,{"inputs":[{"name":"v"},{"name":"m"}],"output":{"name":"concrete"}}],[5,"mul_matrix","","",null,{"inputs":[{"name":"m"},{"name":"n"}],"output":{"name":"concrete"}}],[0,"vec_array","","Helpers for 1d arrays",null,null],[5,"fold","beagle::scalar_array::vec_array","Fold all the elements in a 1d array. The first element is mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"type"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"fold2","","Fold all the elements of two 1d arrays. The first elements are mapped with `f0`,\nthen folding continues with `f` for other elements.",null,null],[5,"dot","","Multiply two Vectors component-wise, summing the results. Known as a dot product.",null,null],[5,"mul_vector_transpose","","",null,null],[5,"cross","","Fold all the elements in a 1d array. The first element is mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"customarraythree"},{"name":"customarraythree"}],"output":{"name":"customarraythree"}}],[0,"array","beagle::scalar_array","Helpers for 2d arrays",null,null],[5,"from_scalar","beagle::scalar_array::array","Construct a 2d array from a single value",null,{"inputs":[{"name":"s"}],"output":{"name":"type"}}],[5,"apply","","Apply a function to all elements of a 2d array",null,{"inputs":[{"name":"type"},{"name":"f"}],"output":null}],[5,"apply2","","Apply a function to all elements of both 2d arrays",null,null],[5,"fold","","Fold all the elements in a 2d array. The first element is mapped with `f0`,\nthen folding continues with `f` for other elements.",null,{"inputs":[{"name":"type"},{"name":"f0"},{"name":"f"}],"output":{"name":"o"}}],[5,"fold2","","Fold all the elements of two 2d arrays. The first elements are mapped with `f0`,\nthen folding continues with `f` for other elements.",null,null],[5,"map","","Construct a 2d array from another 2d array and a mapping function",null,null],[5,"map_into_2","","Construct a 2d array from another 2d array and a mapping function",null,null],[5,"map2","","Construct a 2d array from two other 2d arrays and a mapping function",null,null],[5,"map3","","Construct a 2d array from three other 2d arrays and a mapping function",null,null],[5,"transpose","","Transpose a 2d array",null,null],[8,"ScalarArray","beagle::scalar_array","Types that represent a 2d array of scalars (a matrix or a vector).",null,null],[16,"Scalar","","The type of the underlying scalar in the array.",38,null],[16,"Row","","The type of a single element of this type (a single row for matrices/a scalar for vectors).",38,null],[16,"Dim","","The dimension of the scalar array.",38,null],[8,"HasConcreteScalarArray","","Matrix/Vector types that have an associated constructable type",null,null],[16,"Concrete","","The type of a concrete ScalarArray of the specified type",39,null],[8,"HasConcreteVecArray","","Vector types that have an associated constructable type",null,null],[8,"ConcreteScalarArray","","Matrix/Vector types that can be constructed",null,null],[10,"from_val","","Create from an array",40,null],[8,"ConcreteVecArray","","Vector types that can be constructed",null,null],[10,"from_vec_val","","Create from an array",41,null],[8,"ScalarArrayVal","","Matrix/Vector types that can be deconstructed",null,null],[10,"get_val","","Extract the inner array",42,null],[8,"VecArrayVal","","Vector types that can be deconstructed",null,null],[10,"get_vec_val","","Extract the inner array",43,null],[8,"ScalarArrayRef","","Matrix/Vector types that can be references",null,null],[10,"get_ref","","Extract the inner array references",44,null],[8,"VecArrayRef","","Vector types that can be references",null,null],[10,"get_vec_ref","","Extract the inner array references",45,null],[8,"ScalarArrayMut","","Matrix/Vector types that can be mutated",null,null],[10,"get_mut","","Extract the inner array mutable references",46,null],[0,"vec","beagle","An array of Scalars, written `Vec&lt;D, V&gt;` but pronounced &#39;vector&#39;.",null,null],[3,"Vec","beagle::vec","An array of Scalars, written `Vec&lt;D, V&gt;` but pronounced &#39;vector&#39;.",null,null],[5,"dot","","Multiply two Vectors component-wise, summing the results. Known as a dot product.",null,null],[5,"length2","","Returns the length squared of `s`.",null,null],[5,"length","","Returns the length of `s`.",null,null],[5,"normalize","","Returns an approximated normalized version of `s`. This is generally faster than `normalize_exact`.",null,null],[5,"normalize_exact","","Returns an exact normalized version of `s`. Basically `v / v.length()`",null,null],[5,"distance2","","Returns the distance squared between `lhs` and `rhs`.",null,null],[5,"distance","","Returns the distance between `lhs` and `rhs`.",null,null],[5,"cross","","Returns the cross product of `s` and `t`.",null,{"inputs":[{"name":"s"},{"name":"t"}],"output":{"name":"concrete"}}],[5,"is_perpendicular","","Returns `cos²(θ) &lt; ε²`, where `θ` = the angle between `a` and `b`.",null,{"inputs":[{"name":"s"},{"name":"t"},{"name":"approxzero"}],"output":{"name":"bool"}}],[5,"faceforward","","Returns `n` if `nref.dot(i)` is negative, else `-n`.",null,{"inputs":[{"name":"n"},{"name":"i"},{"name":"nref"}],"output":{"name":"n"}}],[5,"reflect","","Reflects `i` against `n` as `i - n * dot(i,n) * 2`.",null,{"inputs":[{"name":"i"},{"name":"n"}],"output":{"name":"output"}}],[6,"Vec1","","An alias for Vec&amp;lt;One, V&amp;gt;",null,null],[6,"Vec2","","An alias for Vec&amp;lt;One, V&amp;gt;",null,null],[6,"Vec3","","An alias for Vec&amp;lt;One, V&amp;gt;",null,null],[6,"Vec4","","An alias for Vec&amp;lt;One, V&amp;gt;",null,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"vec"}}],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"new","","Construct a vector from an array",47,{"inputs":[{"name":"rawtype"}],"output":{"name":"self"}}],[11,"from_value","","Construct a Vector from a single value",47,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"index","","",47,null],[11,"index_mut","","",47,null],[11,"get_val","","",47,null],[11,"get_ref","","",47,null],[11,"get_mut","","",47,null],[11,"get_vec_val","","",47,null],[11,"get_vec_ref","","",47,null],[11,"from_val","","",47,null],[11,"from_vec_val","","",47,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"neg","","",47,null],[11,"not","","",47,null],[11,"bitand","","",47,null],[11,"bitand","","",47,null],[11,"bitand","beagle","",0,null],[11,"bitor","beagle::vec","",47,null],[11,"bitor","","",47,null],[11,"bitor","beagle","",0,null],[11,"bitxor","beagle::vec","",47,null],[11,"bitxor","","",47,null],[11,"bitxor","beagle","",0,null],[11,"shl","beagle::vec","",47,null],[11,"shl","","",47,null],[11,"shl","beagle","",0,null],[11,"shr","beagle::vec","",47,null],[11,"shr","","",47,null],[11,"shr","beagle","",0,null],[11,"add","beagle::vec","",47,null],[11,"add","","",47,null],[11,"add","beagle","",0,null],[11,"div","beagle::vec","",47,null],[11,"div","","",47,null],[11,"div","beagle","",0,null],[11,"mul","beagle::vec","",47,null],[11,"mul","","",47,null],[11,"mul","beagle","",0,null],[11,"rem","beagle::vec","",47,null],[11,"rem","","",47,null],[11,"rem","beagle","",0,null],[11,"sub","beagle::vec","",47,null],[11,"sub","","",47,null],[11,"sub","beagle","",0,null],[11,"bitand_assign","beagle::vec","",47,null],[11,"bitand_assign","","",47,null],[11,"bitor_assign","","",47,null],[11,"bitor_assign","","",47,null],[11,"bitxor_assign","","",47,null],[11,"bitxor_assign","","",47,null],[11,"shl_assign","","",47,null],[11,"shl_assign","","",47,null],[11,"shr_assign","","",47,null],[11,"shr_assign","","",47,null],[11,"add_assign","","",47,null],[11,"add_assign","","",47,null],[11,"div_assign","","",47,null],[11,"div_assign","","",47,null],[11,"mul_assign","","",47,null],[11,"mul_assign","","",47,null],[11,"rem_assign","","",47,null],[11,"rem_assign","","",47,null],[11,"sub_assign","","",47,null],[11,"sub_assign","","",47,null],[11,"mul","","",47,null],[0,"num","beagle","A collection of numeric traits and functions.",null,null],[3,"AbsoluteEpsilon","beagle::num","An approximator using simple episilon.",null,null],[12,"0","","",48,null],[8,"Abs","","Types that can have their absolute value taken",null,null],[16,"Output","","The resulting type.",49,null],[10,"abs","","Computes the absolute value of self. Returns NaN if the number is NaN.",49,null],[10,"abs_diff","","Returns |self-rhs| without modulo overflow.",49,null],[8,"Approx","","Types that can be used with compared to be approximate equal.",null,null],[10,"approx","","Returns true if `lhs` is approximately `rhs`.",50,null],[8,"ApproxZero","","Types that can be used to compare to zero efficiently.",null,null],[10,"approx_zero","","Returns true if `a` is approximately zero.",51,null],[10,"approx_zero_ratio","","Returns true if `a/b` is approximately zero.",51,null],[8,"Clamp","","Types that can be clamped",null,null],[16,"Output","","The output type",52,null],[10,"min","","Returns the minimum of the two numbers.\nIf one of the arguments is NaN, then the other argument is returned.",52,null],[10,"max","","Returns the minimum of the two numbers.\nIf one of the arguments is NaN, then the other argument is returned.",52,null],[10,"clamp","","Returns the value of `self` constrained to the range [`min_val`, `max_val`]\nThe returned value is computed as min(max(self, `min_val`), `mal_val`).",52,null],[8,"Exp","","Types that implement exponential functions",null,null],[16,"Output","","The output type",53,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",53,null],[10,"exp2","","Returns `2^(self)`.",53,null],[10,"ln","","Returns the natural logarithm of the number.",53,null],[10,"log2","","Returns the base 2 logarithm of the number.",53,null],[10,"log10","","Returns the base 10 logarithm of the number.",53,null],[8,"FloatCategory","","Types that can be categorized via `FpCategory`",null,null],[16,"Bool","","The `bool` output type",54,null],[16,"FpCategory","","The `FpCategory` output type",54,null],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",54,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",54,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",54,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",54,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",54,null],[8,"FloatTransmute","","Types that can be transmuted either from a float to an integer  representation of the bits, or\nvice-versa",null,null],[16,"Output","","The type after transmuting",55,null],[10,"float_transmute","","Decodes a float into its bit representation",55,null],[8,"FractionExponent","","Types that can be broken into a fractional component and an exponent",null,null],[16,"Fraction","","The floating point fractional component type",56,null],[16,"Exponent","","The integral exponent component type",56,null],[10,"frexp","","Extracts a floating point significand in the range [`0.5`, `1.0`) and an integer such that:\n`self = Fraction * 2^Exponent`",56,null],[8,"Hyperbolic","","Types that implment hyperbolic angle functions.",null,null],[16,"Output","","The output type",57,null],[10,"sinh","","Hyperbolic sine function.",57,null],[10,"cosh","","Hyperbolic cosine function.",57,null],[10,"tanh","","Hyperbolic tangent function.",57,null],[10,"asinh","","Hyperbolic sine function.",57,null],[10,"acosh","","Hyperbolic cosine function.",57,null],[10,"atanh","","Hyperbolic tangent function.",57,null],[8,"LoadExponent","","Types that can be used to load the exponent of a floating point number",null,null],[16,"Output","","The output type",58,null],[10,"ldexp","","Creates a floating point number equal to `self * 2^exp`",58,null],[8,"Mix","","Types which can be mixed",null,null],[16,"Output","","The output type",59,null],[10,"mix","","Performs a linear interpolation between a number and y using `a` to weight between them.\nFor non-boolean `a`, the return value is computed as `self*(1-a) + y*a*self*(1-a) + y*a`.\nFor boolean `a`, the return value is composed of selected components of `x` and `y`.\nFalse components of `a` select the corresponding component of `x`. True componenets\nof `a` select the corresponding components of &#39;y&#39;.",59,null],[8,"MulAdd","","Types that implement fused multiply-add",null,null],[16,"Output","","The output type",60,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result than a separate multiplication operation\nfollowed by an add. Usually it&#39;s a little slower, depending on hardware.",60,null],[8,"Pow","","Types that implement the Pow function",null,null],[16,"Output","","The output type",61,null],[10,"pow","","Returns `self` raised to the power `rhs`",61,null],[8,"Recip","","Types that can have the reciprocal taken.",null,null],[16,"Output","","The output type",62,null],[10,"recip","","Takes the reciprocal (inverse) of a number, `1/x`.",62,null],[8,"Round","","Types that can be rounded.",null,null],[16,"Output","","The output type",63,null],[10,"floor","","Returns the largest integer less than or equal to a number.",63,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",63,null],[10,"trunc","","Returns the integer part of a number.",63,null],[10,"fract","","Returns the fractional part of a number.",63,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from 0.0.",63,null],[8,"Sign","","Types that can be sign functions.",null,null],[16,"Output","","The resulting boolean type.",64,null],[10,"is_negative","","Returns `true` if `self` is strictly less than zero.",64,null],[10,"is_positive","","Returns `true` if `self` is strictly greater than zero.",64,null],[10,"is_sign_negative","","Returns `true` if `self`&#39;s sign is negative (including `-0`).",64,null],[10,"is_sign_positive","","Returns `true` if `self`&#39;s sign is positive (including `+0`).",64,null],[10,"signum","","Returns a number that represents the sign of self.\nNaN if `self` is NaN\nOne if the `self.is_sign_positive()`\nNegative one if `self.is_sign_negative()`",64,null],[10,"sign","","Returns a number that represents the sign of self.\nNaN if `self` is NaN\nOne if the `self.is_positive()`\nNegative one if `self.is_negative()`\nelse Zero",64,null],[8,"Sqrt","","Types that can be square-rooted.",null,null],[16,"Output","","The output type",65,null],[10,"sqrt","","Takes the square root of a number.",65,null],[10,"inverse_sqrt","","Returns the inverse of the square root of a number. i.e. the value `1/√x`.",65,null],[8,"Step","","Types that can generate a step function by comparing two values",null,null],[16,"Output","","The output type",66,null],[10,"step","","",66,null],[10,"smoothstep","","Performs smooth Hermite interpolation between 0 and 1 when `edge0 &lt; self &lt; edge1`.\nsmoothstep is equivalent to:\n```\nt = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\nreturn t * t * (3.0 - 2.0 * t);\n```\nResults are undefined if `edge0 ≥ edge1`.",66,null],[11,"squared","","Tighten approximation so that `self.approx_zero(x) == self.squared().approx_zero(x*x)`.",48,null],[11,"approx","","",48,null],[11,"approx_zero","","",48,null],[11,"approx_zero_ratio","","",48,null],[11,"clone","beagle","",0,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"value"}}],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"neg","","",0,null],[11,"not","","",0,null],[11,"bitand","","",0,null],[11,"bitor","","",0,null],[11,"bitxor","","",0,null],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"add","","",0,null],[11,"div","","",0,null],[11,"rem","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"bitand_assign","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitxor_assign","","",0,null],[11,"shl_assign","","",0,null],[11,"shr_assign","","",0,null],[11,"add_assign","","",0,null],[11,"div_assign","","",0,null],[11,"rem_assign","","",0,null],[11,"sub_assign","","",0,null],[11,"mul_assign","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"index","beagle::vec","",47,null],[11,"index","","",47,null],[11,"index","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"index_mut","","",47,null],[11,"index","","",47,null],[11,"index_mut","","",47,null]],"paths":[[3,"Value"],[8,"Angle"],[3,"Rad32"],[3,"Rad64"],[3,"Deg32"],[3,"Deg64"],[3,"CustomArrayZero"],[3,"CustomArrayOne"],[3,"CustomArrayTwo"],[3,"CustomArrayThree"],[3,"CustomArrayFour"],[8,"Constant"],[8,"IsSmallerThan"],[8,"HasSmaller"],[8,"HasLarger"],[8,"ExtractItem"],[8,"ExtractArray"],[8,"DecrementIfLargerThan"],[8,"SelectTwo"],[8,"SelectThree"],[8,"SelectFour"],[8,"Array"],[8,"ArrayRef"],[8,"ArrayMut"],[8,"Dim"],[3,"Zero"],[3,"One"],[3,"Two"],[3,"Three"],[3,"Four"],[8,"SwizzleIndex"],[3,"Vec2Ref"],[3,"Vec3Ref"],[3,"Vec4Ref"],[3,"Mat"],[6,"Mat2"],[6,"Mat3"],[6,"Mat4"],[8,"ScalarArray"],[8,"HasConcreteScalarArray"],[8,"ConcreteScalarArray"],[8,"ConcreteVecArray"],[8,"ScalarArrayVal"],[8,"VecArrayVal"],[8,"ScalarArrayRef"],[8,"VecArrayRef"],[8,"ScalarArrayMut"],[3,"Vec"],[3,"AbsoluteEpsilon"],[8,"Abs"],[8,"Approx"],[8,"ApproxZero"],[8,"Clamp"],[8,"Exp"],[8,"FloatCategory"],[8,"FloatTransmute"],[8,"FractionExponent"],[8,"Hyperbolic"],[8,"LoadExponent"],[8,"Mix"],[8,"MulAdd"],[8,"Pow"],[8,"Recip"],[8,"Round"],[8,"Sign"],[8,"Sqrt"],[8,"Step"]]};
initSearch(searchIndex);
